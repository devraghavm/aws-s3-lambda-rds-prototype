name: 'Terrform Plan/Apply'

on: [workflow_call]

jobs:
  terraform_apply:
    name: 'Terraform'
    defaults:
      run:
        working-directory: ${{ github.event.inputs.resource }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
          name: dist
          path: ${{ github.workspace}}/${{ github.event.inputs.app_dir }}/dist
      - name: Print working directory
        run: pwd
      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      - name: Check Path Module Path
        run: |
          cd ./../../src/nodejs/src/
          pwd
          ls -lR

      # Generates an execution plan for Terraform
      # Make sure AWS_ACCOUNT_ID is set in your repository secrets
      - name: Terraform Plan
        run: |
          terraform plan -out=plan -input=false -var-file="variables.tfvars" -var account_id=${{ secrets.AWS_ACCOUNT_ID }}

        # On push to "main", build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'Terraform_apply' }}
        run: terraform apply -auto-approve -input=false  plan
